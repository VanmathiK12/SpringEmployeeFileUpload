/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.37
 * Generated at: 2023-04-20 11:52:30 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("\r\n");
      out.write("<head>\r\n");
      out.write("    <meta charset=\"utf-8\">\r\n");
      out.write("    <title>File Upload Example</title>\r\n");
      out.write("    <link rel=\"stylesheet\" href=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/css/bootstrap.min.css\">\r\n");
      out.write("    <script src=\"https://stackpath.bootstrapcdn.com/bootstrap/4.3.1/js/bootstrap.min.js\"></script>\r\n");
      out.write("</head>\r\n");
      out.write("\r\n");
      out.write("<body>\r\n");
      out.write("    <h1>Emloyee Information</h1>\r\n");
      out.write("    <form id=\"file-upload-form\" action=\"/upload\" method=\"post\" enctype=\"multipart/form-data\"> \r\n");
      out.write("        <label for=\"name-field\">Name:</label> \r\n");
      out.write("        <input type=\"text\" id=\"name-field\" name=\"name\" required><br><br> \r\n");
      out.write("        <label for=\"empid-field\">Employee ID:</label> \r\n");
      out.write("        <input type=\"text\" id=\"empid-field\" name=\"empid\" required><br><br>\r\n");
      out.write("        <h4>Documents</h4>\r\n");
      out.write("        <div id=\"documents\" name=\"documentName\">\r\n");
      out.write("            <div class=\"document\"> <select class=\"document-type\" id=\"doctype-field\" name=\"docname[]\" required>\r\n");
      out.write("                    <option value=\"pan\">PAN Card</option>\r\n");
      out.write("                    <option value=\"aadhar\">Aadhar Card</option>\r\n");
      out.write("                    <option value=\"voterid\">Voter ID Card</option>\r\n");
      out.write("                </select> \r\n");
      out.write("                <input type=\"file\" class=\"document-file\" name=\"document[]\" required> \r\n");
      out.write("                <button type=\"button\" class=\"remove-document\" onclick=\"removeDocument(this)\">Remove</button><br><br> </div>\r\n");
      out.write("        </div> \r\n");
      out.write("        <button type=\"button\" onclick=\"addDocument()\">Add Document</button><br><br> \r\n");
      out.write("        <input type=\"submit\" value=\"Submit\">\r\n");
      out.write("    </form>\r\n");
      out.write("    <script> \r\n");
      out.write("    const uri = \"http://localhost:9090/upload\"; \r\n");
      out.write("    function addDocument() { \r\n");
      out.write("    let documents = document.getElementById(\"documents\"); \r\n");
      out.write("    let documentTemplate = document.createElement(\"div\"); \r\n");
      out.write("    documentTemplate.classList.add(\"document\"); \r\n");
      out.write("    let typeSelector = document.createElement(\"select\"); \r\n");
      out.write("    typeSelector.classList.add(\"document-type\"); \r\n");
      out.write("    let panOption = document.createElement(\"option\"); \r\n");
      out.write("    panOption.value = \"pan\"; panOption.text = \"PAN Card\"; \r\n");
      out.write("    typeSelector.appendChild(panOption); \r\n");
      out.write("    let aadharOption = document.createElement(\"option\"); \r\n");
      out.write("    aadharOption.value = \"aadhar\"; aadharOption.text = \"Aadhar Card\"; \r\n");
      out.write("    typeSelector.appendChild(aadharOption); let voterOption = document.createElement(\"option\"); \r\n");
      out.write("    voterOption.value = \"voterid\"; voterOption.text = \"Voter ID Card\"; \r\n");
      out.write("    typeSelector.appendChild(voterOption); documentTemplate.appendChild(typeSelector); \r\n");
      out.write("    let fileInput = document.createElement(\"input\"); \r\n");
      out.write("    fileInput.type = \"file\"; \r\n");
      out.write("    fileInput.classList.add(\"document-file\"); \r\n");
      out.write("    fileInput.name = \"document[]\"; \r\n");
      out.write("    fileInput.required = true; \r\n");
      out.write("    documentTemplate.appendChild(fileInput); \r\n");
      out.write("    let removeButton = document.createElement(\"button\"); \r\n");
      out.write("    removeButton.type = \"button\"; \r\n");
      out.write("    removeButton.classList.add(\"remove-document\"); \r\n");
      out.write("    removeButton.textContent = \"Remove\"; \r\n");
      out.write("    removeButton.addEventListener(\"click\", function () { removeDocument(this) }); \r\n");
      out.write("    documentTemplate.appendChild(removeButton); \r\n");
      out.write("    documents.appendChild(documentTemplate); \r\n");
      out.write("    // var xhttp = new XMLHttpRequest(); \r\n");
      out.write("    // xhttp.open(\"POST\", uri, true); \r\n");
      out.write("    // xhttp.setRequestHeader(\"Content-type\", \"application/json\"); \r\n");
      out.write("    // xhttp.send(JSON.stringify(newBook)); \r\n");
      out.write("    // xhttp.onreadystatechange = function () \r\n");
      out.write("    // { \r\n");
      out.write("    //     if (this.readyState == 4 && this.status == 200) \r\n");
      out.write("    //     { console.log('File uploaded successfully'); \r\n");
      out.write("    //     }\r\n");
      out.write("    // } \r\n");
      out.write("} \r\n");
      out.write("function removeDocument(button) \r\n");
      out.write("{ \r\n");
      out.write("    let documentElement = button.parentElement; \r\n");
      out.write("    let fileInput = documentElement.querySelector(\".document-file\"); \r\n");
      out.write("    fileInput.value = null; documentElement.remove(); \r\n");
      out.write("    } \r\n");
      out.write("    </script>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
